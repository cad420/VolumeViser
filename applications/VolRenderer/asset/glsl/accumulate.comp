#version 460 core
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;


layout(rgba32f, binding = 0) uniform readonly image2D Src;//framne
layout(rgba32f, binding = 1) uniform image2D Dst;//accumulate

layout(std140, binding = 0) uniform Params{
    int FrameIndex;
};

void main() {
    ivec2 res = imageSize(Src);
    ivec2 g_index = ivec2(gl_WorkGroupSize.xy * gl_WorkGroupID.xy + gl_LocalInvocationID.xy);
    if (g_index.x >= res.x || g_index.y >= res.y){
        return;
    }

    vec4 cur_color = imageLoad(Src, g_index);

    vec4 accu_color = imageLoad(Dst, g_index);

    float n = max(float(FrameIndex), 1.f);

    vec4 blend_color = accu_color + (cur_color - accu_color) / n;

    imageStore(Dst, g_index, blend_color);
}
